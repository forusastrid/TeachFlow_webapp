[TeachFlow 프로젝트 기획서]

기획 이유 : AI 중점 고등학교이지만 딱히 일반고와 차이점이 없기에 학교 쳬계화 프로그램을 개발하여 학교를 쳬계화하기 위해 기획하게 되었습니다.

   •   주요 기능

   1. 선생님 호출 시스템
   •   기능: 학생이 교사 목록에서 선택 → 호출 요청 전송 → 교사는 웹/앱 푸시로 알림 수신
   •   기술 요소: WebSocket / 실시간 알림, 교사 상태표시(수업중/대기중)

⸻

   2. 전자 시간표
   •   기능: 학급/교사별 시간표 조회, 실시간 변경 반영, Google Calendar 연동
   •   기술 요소: FullCalendar.js, 시간표 DB 모델, 사용자 권한(학생/교사)

⸻

   3. 기기/장비 예약 시스템
   •   기능: 장비 목록 확인 → 예약 → 사용 이력 관리
   •   기술 요소: 장비 예약 DB, 예약 중복 방지 로직, 관리자 승인 기능(Optional)

⸻

   4. 방과후 교실/특별실 대여 시스템
   •   기능: 시설 위치/상태 확인 → 시간 단위 예약 → 승인 및 알림
   •   기술 요소: 캘린더 UI, 시설별 예약 제한 설정, 접근 권한 제어

⸻

   5. 급식 알리미
   •   기능: 오늘의 급식 메뉴 제공, 알레르기 표시
   •   기술 요소: 급식 API 연동(NEIS)

⸻

   6. AI 챗봇 문의 응답 시스템
   •   기능: 자주 묻는 질문 자동응답, 질문 가능, 교무행정 절차 안내
   •   기술 요소: GPT API 기반 챗봇, 사용자 학습 로그 저장


TeachFlow - 패드 운영 기반 시스템 설계

1. 디바이스 환경 구성
   •   설치 장소:
   •   교무실(교사용)
   •   교실 앞 or 내부(학생용)
   •   특별실/장비실 입구(예약 확인용)
   •   디바이스 제안:
   •   안드로이드 태블릿 (저비용, 웹앱 구동 용이)

⸻

2. 앱 개발
   •   앱
   •   android , ios에 해당되게 개발   
   •   반응형 UI + 태블릿 해상도 대응
   •   Kiosk Mode 설정 지원 (앱 외부 접근 방지)
⸻

3. 백엔드 및 인프라 구성
   •   서버 호스팅:
   •   Node.js + Express 백엔드
   •   Firebase  활용 (보안성/속도 우수)

   •   WebSocket 서버:
   •   교사-학생 간 실시간 호출/응답
   •   Socket.io + JWT 기반 인증 연동
⸻

4. 보안 및 권한 고려
   •   로그인 방식:
   •   학생 :  학번 + 개인코드 입력
   •   교사 :  구글 로그인 (Firebase Authentication)

   •   사용자 권한:
   •   관리자 / 교사 / 학생
   •   기능 접근 제어 (예: 교사만 시간표 수정 가능)
⸻

5. 유지관리와 실시간 상태 표시

   •   관리자용 대시보드에서 패드 상태 확인
   •   인터넷 연결/버전/마지막 접속 시간 체크

   •   OTA 업데이트 or 재시작 기능
   •   소프트웨어 변경사항 원격 적용

